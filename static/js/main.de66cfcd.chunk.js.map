{"version":3,"sources":["store/index.ts","store/constants.ts","store/selectors.ts","store/actions.ts","api/data.ts","components/LoadButton.tsx","components/Loader.tsx","components/Button.tsx","components/SortPanel.tsx","components/Todo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["initialState","todos","isLoading","isLoaded","sortType","store","createStore","state","type","id","filter","todo","composeWithDevTools","getTodos","getSortType","setIsLoading","data","API_URL","getPreparedData","a","Promise","all","fetch","then","response","json","todosData","usersData","preparedTodos","map","user","find","userId","LoadButton","loadTodos","className","onClick","Loader","Button","title","dispatch","useDispatch","handleSort","useCallback","SortPanel","Todo","completed","handleDeleteTodo","key","src","alt","name","TodoList","useSelector","sortedTodos","useMemo","arr","sortBy","sort","b","localeCompare","Number","App","loading","loaded","areTodosExist","length","shouldButtonHide","setTimeout","setTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de66cfcd.chunk.js","sourcesContent":["import { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  LOAD_TODOS, REMOVE_TODO, SET_LOADED, SET_LOADING, SET_SORT_TYPE,\n} from './constants';\n\nconst initialState: RootState = {\n  todos: [],\n  isLoading: false,\n  isLoaded: false,\n  sortType: '',\n};\n\nconst rootReducer = (state = initialState, {\n  type, isLoading, isLoaded, todos, sortType, id,\n}: AnyAction) => {\n  switch (type) {\n    case SET_LOADING:\n      return { ...state, isLoading };\n\n    case SET_LOADED:\n      return { ...state, isLoaded };\n\n    case LOAD_TODOS:\n      return { ...state, todos };\n\n    case SET_SORT_TYPE:\n      return { ...state, sortType };\n\n    case REMOVE_TODO:\n      return { ...state, todos: state.todos.filter(todo => todo.id !== id) };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","export const LOAD_TODOS = 'LOAD_TODOS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_LOADED = 'SET_LOADED';\nexport const SET_SORT_TYPE = 'SET_SORT_TYPE';\nexport const REMOVE_TODO = 'REMOVE_TODO';\n","export const getTodos = (state: RootState) => state.todos;\nexport const isLoading = (state: RootState) => state.isLoading;\nexport const isLoaded = (state: RootState) => state.isLoaded;\nexport const getSortType = (state: RootState) => state.sortType;\nexport const removeTodo = (state: RootState) => state.id;\n","import {\n  LOAD_TODOS,\n  SET_LOADING,\n  SET_LOADED, SET_SORT_TYPE, REMOVE_TODO,\n} from './constants';\n\nexport const setTodos = (data: Todos) => ({\n  type: LOAD_TODOS,\n  todos: data,\n});\n\nexport const setIsLoading = (data: boolean) => ({\n  type: SET_LOADING,\n  isLoading: data,\n});\n\nexport const setIsLoaded = (data: boolean) => ({\n  type: SET_LOADED,\n  isLoaded: data,\n});\n\nexport const setSortType = (data: string) => ({\n  type: SET_SORT_TYPE,\n  sortType: data,\n});\n\nexport const removeTodo = (data: number) => ({\n  type: REMOVE_TODO,\n  id: data,\n});\n","const API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const getTodos = () => {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json());\n};\n\nexport const getUsers = () => {\n  return fetch(`${API_URL}/users`)\n    .then(response => response.json());\n};\n\nexport const getPreparedData = async () => {\n  const [todosData, usersData] = await Promise.all(\n    [getTodos(), getUsers()],\n  );\n\n  const preparedTodos = todosData.map((todo: Todo) => ({\n    ...todo,\n    user: usersData.find((user: User) => user.id === todo.userId),\n  }));\n\n  return preparedTodos;\n};\n","import React from 'react';\n\nexport const LoadButton = ({ loadTodos }: LoadButtonProps) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"waves-effect waves-light btn-large mgb20\"\n      onClick={loadTodos}\n    >\n      load todos\n    </button>\n  );\n};\n","import React from 'react';\n\nexport const Loader = () => (\n  <div className=\"preloader-wrapper big active\">\n    <div className=\"spinner-layer spinner-blue\">\n      <div className=\"circle-clipper left\">\n        <div className=\"circle\" />\n      </div>\n      <div className=\"gap-patch\">\n        <div className=\"circle\" />\n      </div>\n      <div className=\"circle-clipper right\">\n        <div className=\"circle\" />\n      </div>\n    </div>\n  </div>\n);\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setSortType } from '../store/actions';\n\nexport const Button = ({ sortType, title }: ButtonProps) => {\n  const dispatch = useDispatch();\n  const handleSort = useCallback(() => dispatch(setSortType(sortType)), [dispatch, sortType]);\n\n  return (\n    <button\n      type=\"button\"\n      className=\"waves-effect waves-light btn mgb20\"\n      onClick={handleSort}\n    >\n      {title}\n    </button>\n  );\n};\n","import React from 'react';\nimport { Button } from './Button';\n\nexport const SortPanel = () => {\n  return (\n    <div className=\"sort-panel\">\n      <Button\n        title=\"sort by title\"\n        sortType=\"title\"\n      />\n      <Button\n        title=\"sort by status\"\n        sortType=\"status\"\n      />\n      <Button\n        title=\"sort by name\"\n        sortType=\"name\"\n      />\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { removeTodo } from '../store/actions';\n\nexport const Todo = ({\n  id, title, completed, user,\n}: Todo) => {\n  const dispatch = useDispatch();\n  const handleDeleteTodo = useCallback(() => dispatch(removeTodo(id)), [dispatch, id]);\n\n  return (\n    <li key={id} className=\"collection-item avatar\">\n      <img\n        src=\"https://materializecss.com/images/yuna.jpg\"\n        alt=\"\"\n        className=\"circle\"\n      />\n      <span className=\"title\">{user.name}</span>\n      <p>{title}</p>\n      <span\n        className=\"delete\"\n        onClick={handleDeleteTodo}\n      >\n        Delete todo\n      </span>\n      <i className=\"secondary-content\">\n        {completed\n          ? <i className=\"material-icons color-green\">Completed</i>\n          : <i className=\"material-icons color-red\">In Process</i>}\n      </i>\n    </li>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { SortPanel } from './SortPanel';\nimport { getSortType } from '../store/selectors';\nimport { Todo } from './Todo';\n\nexport const TodoList = ({ todos }: Todos) => {\n  const sortType = useSelector(getSortType);\n\n  const sort = (arr: Todo[], sortBy: string) => {\n    switch (sortBy) {\n      case 'title':\n        return [...arr].sort(\n          (a, b) => a.title.localeCompare(b.title),\n        );\n      case 'completed':\n        return [...arr].sort(\n          (a, b) => Number(a.completed) - Number(b.completed),\n        );\n      case 'name':\n        return [...arr].sort(\n          (a, b) => a.user.name.localeCompare(b.user.name),\n        );\n\n      default: return arr;\n    }\n  };\n\n  const sortedTodos = useMemo(() => sort(todos, sortType), [todos, sortType]);\n\n  return (\n    <>\n      <SortPanel />\n      <ul className=\"collection\">\n        {sortedTodos.map((todo) => <Todo {...todo} key={todo.id} />)}\n      </ul>\n    </>\n  );\n};\n","import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport './App.scss';\n\nimport { getTodos, isLoaded, isLoading } from './store/selectors';\nimport { setIsLoaded, setIsLoading, setTodos } from './store/actions';\nimport { getPreparedData } from './api/data';\n\nimport { LoadButton } from './components/LoadButton';\nimport { Loader } from './components/Loader';\nimport { TodoList } from './components/TodoList';\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector(getTodos);\n  const loading = useSelector(isLoading);\n  const loaded = useSelector(isLoaded);\n  const areTodosExist = useMemo(() => loaded && todos.length > 0, [loaded, todos.length]);\n  const shouldButtonHide = useMemo(() => !loading && !loaded, [loading, loaded]);\n\n  const loadTodos = useCallback(() => {\n    dispatch(setIsLoading(true));\n\n    setTimeout(() => {\n      getPreparedData()\n        .then(data => dispatch(setTodos(data)));\n\n      dispatch(setIsLoading(false));\n    }, 3000);\n\n    dispatch(setIsLoaded(true));\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"heading\">\n        <h1>Redux list of TODOs</h1>\n        {shouldButtonHide && <LoadButton loadTodos={loadTodos} />}\n        {loading && <Loader />}\n      </div>\n      {areTodosExist && (\n        <TodoList todos={todos} />)}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}